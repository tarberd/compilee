use crate::Token;

grammar;

pub Program: () = {
    Statement?,
};

Statement: () = {
    VariableDeclaration ";",
}

VariableDeclaration: () = {
    "int" Id,
    "float" Id,
    "string" Id,
    "int" Id "[" "]",
    "float" Id "[" "]",
    "string" Id "[" "]",
}

Id: () = {
    r"\w+",
}

extern {
    type Location = usize;
    type Error = crate::LexicalError;

    enum Token {
        ";" => Token::Semicolon,
        "int" => Token::Int,
        "float" => Token::Float,
        "string" => Token::String,
        "[" => Token::RBracket,
        "]" => Token::LBracket,
        r"\w+" => Token::Identifier,
    }
}
